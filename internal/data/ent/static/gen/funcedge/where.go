// Code generated by ent, DO NOT EDIT.

package funcedge

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/toheart/goanalysis/internal/data/ent/static/gen/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "CreatedAt" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "UpdatedAt" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldUpdatedAt, v))
}

// CallerKey applies equality check predicate on the "CallerKey" field. It's identical to CallerKeyEQ.
func CallerKey(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldCallerKey, v))
}

// CalleeKey applies equality check predicate on the "CalleeKey" field. It's identical to CalleeKeyEQ.
func CalleeKey(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldCalleeKey, v))
}

// CreatedAtEQ applies the EQ predicate on the "CreatedAt" field.
func CreatedAtEQ(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "CreatedAt" field.
func CreatedAtNEQ(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "CreatedAt" field.
func CreatedAtIn(vs ...time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "CreatedAt" field.
func CreatedAtNotIn(vs ...time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "CreatedAt" field.
func CreatedAtGT(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "CreatedAt" field.
func CreatedAtGTE(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "CreatedAt" field.
func CreatedAtLT(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "CreatedAt" field.
func CreatedAtLTE(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "UpdatedAt" field.
func UpdatedAtEQ(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "UpdatedAt" field.
func UpdatedAtNEQ(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "UpdatedAt" field.
func UpdatedAtIn(vs ...time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "UpdatedAt" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "UpdatedAt" field.
func UpdatedAtGT(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "UpdatedAt" field.
func UpdatedAtGTE(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "UpdatedAt" field.
func UpdatedAtLT(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "UpdatedAt" field.
func UpdatedAtLTE(v time.Time) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLTE(FieldUpdatedAt, v))
}

// CallerKeyEQ applies the EQ predicate on the "CallerKey" field.
func CallerKeyEQ(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldCallerKey, v))
}

// CallerKeyNEQ applies the NEQ predicate on the "CallerKey" field.
func CallerKeyNEQ(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNEQ(FieldCallerKey, v))
}

// CallerKeyIn applies the In predicate on the "CallerKey" field.
func CallerKeyIn(vs ...string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldIn(FieldCallerKey, vs...))
}

// CallerKeyNotIn applies the NotIn predicate on the "CallerKey" field.
func CallerKeyNotIn(vs ...string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNotIn(FieldCallerKey, vs...))
}

// CallerKeyGT applies the GT predicate on the "CallerKey" field.
func CallerKeyGT(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGT(FieldCallerKey, v))
}

// CallerKeyGTE applies the GTE predicate on the "CallerKey" field.
func CallerKeyGTE(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGTE(FieldCallerKey, v))
}

// CallerKeyLT applies the LT predicate on the "CallerKey" field.
func CallerKeyLT(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLT(FieldCallerKey, v))
}

// CallerKeyLTE applies the LTE predicate on the "CallerKey" field.
func CallerKeyLTE(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLTE(FieldCallerKey, v))
}

// CallerKeyContains applies the Contains predicate on the "CallerKey" field.
func CallerKeyContains(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldContains(FieldCallerKey, v))
}

// CallerKeyHasPrefix applies the HasPrefix predicate on the "CallerKey" field.
func CallerKeyHasPrefix(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldHasPrefix(FieldCallerKey, v))
}

// CallerKeyHasSuffix applies the HasSuffix predicate on the "CallerKey" field.
func CallerKeyHasSuffix(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldHasSuffix(FieldCallerKey, v))
}

// CallerKeyEqualFold applies the EqualFold predicate on the "CallerKey" field.
func CallerKeyEqualFold(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEqualFold(FieldCallerKey, v))
}

// CallerKeyContainsFold applies the ContainsFold predicate on the "CallerKey" field.
func CallerKeyContainsFold(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldContainsFold(FieldCallerKey, v))
}

// CalleeKeyEQ applies the EQ predicate on the "CalleeKey" field.
func CalleeKeyEQ(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEQ(FieldCalleeKey, v))
}

// CalleeKeyNEQ applies the NEQ predicate on the "CalleeKey" field.
func CalleeKeyNEQ(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNEQ(FieldCalleeKey, v))
}

// CalleeKeyIn applies the In predicate on the "CalleeKey" field.
func CalleeKeyIn(vs ...string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldIn(FieldCalleeKey, vs...))
}

// CalleeKeyNotIn applies the NotIn predicate on the "CalleeKey" field.
func CalleeKeyNotIn(vs ...string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldNotIn(FieldCalleeKey, vs...))
}

// CalleeKeyGT applies the GT predicate on the "CalleeKey" field.
func CalleeKeyGT(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGT(FieldCalleeKey, v))
}

// CalleeKeyGTE applies the GTE predicate on the "CalleeKey" field.
func CalleeKeyGTE(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldGTE(FieldCalleeKey, v))
}

// CalleeKeyLT applies the LT predicate on the "CalleeKey" field.
func CalleeKeyLT(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLT(FieldCalleeKey, v))
}

// CalleeKeyLTE applies the LTE predicate on the "CalleeKey" field.
func CalleeKeyLTE(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldLTE(FieldCalleeKey, v))
}

// CalleeKeyContains applies the Contains predicate on the "CalleeKey" field.
func CalleeKeyContains(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldContains(FieldCalleeKey, v))
}

// CalleeKeyHasPrefix applies the HasPrefix predicate on the "CalleeKey" field.
func CalleeKeyHasPrefix(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldHasPrefix(FieldCalleeKey, v))
}

// CalleeKeyHasSuffix applies the HasSuffix predicate on the "CalleeKey" field.
func CalleeKeyHasSuffix(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldHasSuffix(FieldCalleeKey, v))
}

// CalleeKeyEqualFold applies the EqualFold predicate on the "CalleeKey" field.
func CalleeKeyEqualFold(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldEqualFold(FieldCalleeKey, v))
}

// CalleeKeyContainsFold applies the ContainsFold predicate on the "CalleeKey" field.
func CalleeKeyContainsFold(v string) predicate.FuncEdge {
	return predicate.FuncEdge(sql.FieldContainsFold(FieldCalleeKey, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FuncEdge) predicate.FuncEdge {
	return predicate.FuncEdge(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FuncEdge) predicate.FuncEdge {
	return predicate.FuncEdge(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FuncEdge) predicate.FuncEdge {
	return predicate.FuncEdge(sql.NotPredicates(p))
}
