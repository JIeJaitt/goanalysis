// Code generated by ent, DO NOT EDIT.

package goroutinetrace

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the goroutinetrace type in the database.
	Label = "goroutine_trace"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOriginGid holds the string denoting the origingid field in the database.
	FieldOriginGid = "originGid"
	// FieldTimeCost holds the string denoting the timecost field in the database.
	FieldTimeCost = "timeCost"
	// FieldCreateTime holds the string denoting the createtime field in the database.
	FieldCreateTime = "createTime"
	// FieldIsFinished holds the string denoting the isfinished field in the database.
	FieldIsFinished = "isFinished"
	// FieldInitFuncName holds the string denoting the initfuncname field in the database.
	FieldInitFuncName = "initFuncName"
	// Table holds the table name of the goroutinetrace in the database.
	Table = "goroutineTrace"
)

// Columns holds all SQL columns for goroutinetrace fields.
var Columns = []string{
	FieldID,
	FieldOriginGid,
	FieldTimeCost,
	FieldCreateTime,
	FieldIsFinished,
	FieldInitFuncName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// OriginGidValidator is a validator for the "originGid" field. It is called by the builders before save.
	OriginGidValidator func(uint64) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int64) error
)

// OrderOption defines the ordering options for the GoroutineTrace queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByOriginGid orders the results by the originGid field.
func ByOriginGid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOriginGid, opts...).ToFunc()
}

// ByTimeCost orders the results by the timeCost field.
func ByTimeCost(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTimeCost, opts...).ToFunc()
}

// ByCreateTime orders the results by the createTime field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByIsFinished orders the results by the isFinished field.
func ByIsFinished(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsFinished, opts...).ToFunc()
}

// ByInitFuncName orders the results by the initFuncName field.
func ByInitFuncName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInitFuncName, opts...).ToFunc()
}
