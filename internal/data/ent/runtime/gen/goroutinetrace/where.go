// Code generated by ent, DO NOT EDIT.

package goroutinetrace

import (
	"entgo.io/ent/dialect/sql"
	"github.com/toheart/goanalysis/internal/data/ent/runtime/gen/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLTE(FieldID, id))
}

// OriginGid applies equality check predicate on the "originGid" field. It's identical to OriginGidEQ.
func OriginGid(v uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldOriginGid, v))
}

// TimeCost applies equality check predicate on the "timeCost" field. It's identical to TimeCostEQ.
func TimeCost(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldTimeCost, v))
}

// CreateTime applies equality check predicate on the "createTime" field. It's identical to CreateTimeEQ.
func CreateTime(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldCreateTime, v))
}

// IsFinished applies equality check predicate on the "isFinished" field. It's identical to IsFinishedEQ.
func IsFinished(v int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldIsFinished, v))
}

// InitFuncName applies equality check predicate on the "initFuncName" field. It's identical to InitFuncNameEQ.
func InitFuncName(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldInitFuncName, v))
}

// OriginGidEQ applies the EQ predicate on the "originGid" field.
func OriginGidEQ(v uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldOriginGid, v))
}

// OriginGidNEQ applies the NEQ predicate on the "originGid" field.
func OriginGidNEQ(v uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNEQ(FieldOriginGid, v))
}

// OriginGidIn applies the In predicate on the "originGid" field.
func OriginGidIn(vs ...uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIn(FieldOriginGid, vs...))
}

// OriginGidNotIn applies the NotIn predicate on the "originGid" field.
func OriginGidNotIn(vs ...uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotIn(FieldOriginGid, vs...))
}

// OriginGidGT applies the GT predicate on the "originGid" field.
func OriginGidGT(v uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGT(FieldOriginGid, v))
}

// OriginGidGTE applies the GTE predicate on the "originGid" field.
func OriginGidGTE(v uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGTE(FieldOriginGid, v))
}

// OriginGidLT applies the LT predicate on the "originGid" field.
func OriginGidLT(v uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLT(FieldOriginGid, v))
}

// OriginGidLTE applies the LTE predicate on the "originGid" field.
func OriginGidLTE(v uint64) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLTE(FieldOriginGid, v))
}

// TimeCostEQ applies the EQ predicate on the "timeCost" field.
func TimeCostEQ(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldTimeCost, v))
}

// TimeCostNEQ applies the NEQ predicate on the "timeCost" field.
func TimeCostNEQ(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNEQ(FieldTimeCost, v))
}

// TimeCostIn applies the In predicate on the "timeCost" field.
func TimeCostIn(vs ...string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIn(FieldTimeCost, vs...))
}

// TimeCostNotIn applies the NotIn predicate on the "timeCost" field.
func TimeCostNotIn(vs ...string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotIn(FieldTimeCost, vs...))
}

// TimeCostGT applies the GT predicate on the "timeCost" field.
func TimeCostGT(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGT(FieldTimeCost, v))
}

// TimeCostGTE applies the GTE predicate on the "timeCost" field.
func TimeCostGTE(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGTE(FieldTimeCost, v))
}

// TimeCostLT applies the LT predicate on the "timeCost" field.
func TimeCostLT(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLT(FieldTimeCost, v))
}

// TimeCostLTE applies the LTE predicate on the "timeCost" field.
func TimeCostLTE(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLTE(FieldTimeCost, v))
}

// TimeCostContains applies the Contains predicate on the "timeCost" field.
func TimeCostContains(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldContains(FieldTimeCost, v))
}

// TimeCostHasPrefix applies the HasPrefix predicate on the "timeCost" field.
func TimeCostHasPrefix(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldHasPrefix(FieldTimeCost, v))
}

// TimeCostHasSuffix applies the HasSuffix predicate on the "timeCost" field.
func TimeCostHasSuffix(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldHasSuffix(FieldTimeCost, v))
}

// TimeCostIsNil applies the IsNil predicate on the "timeCost" field.
func TimeCostIsNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIsNull(FieldTimeCost))
}

// TimeCostNotNil applies the NotNil predicate on the "timeCost" field.
func TimeCostNotNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotNull(FieldTimeCost))
}

// TimeCostEqualFold applies the EqualFold predicate on the "timeCost" field.
func TimeCostEqualFold(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEqualFold(FieldTimeCost, v))
}

// TimeCostContainsFold applies the ContainsFold predicate on the "timeCost" field.
func TimeCostContainsFold(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldContainsFold(FieldTimeCost, v))
}

// CreateTimeEQ applies the EQ predicate on the "createTime" field.
func CreateTimeEQ(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "createTime" field.
func CreateTimeNEQ(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "createTime" field.
func CreateTimeIn(vs ...string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "createTime" field.
func CreateTimeNotIn(vs ...string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "createTime" field.
func CreateTimeGT(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "createTime" field.
func CreateTimeGTE(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "createTime" field.
func CreateTimeLT(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "createTime" field.
func CreateTimeLTE(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLTE(FieldCreateTime, v))
}

// CreateTimeContains applies the Contains predicate on the "createTime" field.
func CreateTimeContains(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldContains(FieldCreateTime, v))
}

// CreateTimeHasPrefix applies the HasPrefix predicate on the "createTime" field.
func CreateTimeHasPrefix(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldHasPrefix(FieldCreateTime, v))
}

// CreateTimeHasSuffix applies the HasSuffix predicate on the "createTime" field.
func CreateTimeHasSuffix(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldHasSuffix(FieldCreateTime, v))
}

// CreateTimeIsNil applies the IsNil predicate on the "createTime" field.
func CreateTimeIsNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIsNull(FieldCreateTime))
}

// CreateTimeNotNil applies the NotNil predicate on the "createTime" field.
func CreateTimeNotNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotNull(FieldCreateTime))
}

// CreateTimeEqualFold applies the EqualFold predicate on the "createTime" field.
func CreateTimeEqualFold(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEqualFold(FieldCreateTime, v))
}

// CreateTimeContainsFold applies the ContainsFold predicate on the "createTime" field.
func CreateTimeContainsFold(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldContainsFold(FieldCreateTime, v))
}

// IsFinishedEQ applies the EQ predicate on the "isFinished" field.
func IsFinishedEQ(v int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldIsFinished, v))
}

// IsFinishedNEQ applies the NEQ predicate on the "isFinished" field.
func IsFinishedNEQ(v int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNEQ(FieldIsFinished, v))
}

// IsFinishedIn applies the In predicate on the "isFinished" field.
func IsFinishedIn(vs ...int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIn(FieldIsFinished, vs...))
}

// IsFinishedNotIn applies the NotIn predicate on the "isFinished" field.
func IsFinishedNotIn(vs ...int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotIn(FieldIsFinished, vs...))
}

// IsFinishedGT applies the GT predicate on the "isFinished" field.
func IsFinishedGT(v int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGT(FieldIsFinished, v))
}

// IsFinishedGTE applies the GTE predicate on the "isFinished" field.
func IsFinishedGTE(v int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGTE(FieldIsFinished, v))
}

// IsFinishedLT applies the LT predicate on the "isFinished" field.
func IsFinishedLT(v int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLT(FieldIsFinished, v))
}

// IsFinishedLTE applies the LTE predicate on the "isFinished" field.
func IsFinishedLTE(v int) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLTE(FieldIsFinished, v))
}

// IsFinishedIsNil applies the IsNil predicate on the "isFinished" field.
func IsFinishedIsNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIsNull(FieldIsFinished))
}

// IsFinishedNotNil applies the NotNil predicate on the "isFinished" field.
func IsFinishedNotNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotNull(FieldIsFinished))
}

// InitFuncNameEQ applies the EQ predicate on the "initFuncName" field.
func InitFuncNameEQ(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEQ(FieldInitFuncName, v))
}

// InitFuncNameNEQ applies the NEQ predicate on the "initFuncName" field.
func InitFuncNameNEQ(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNEQ(FieldInitFuncName, v))
}

// InitFuncNameIn applies the In predicate on the "initFuncName" field.
func InitFuncNameIn(vs ...string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIn(FieldInitFuncName, vs...))
}

// InitFuncNameNotIn applies the NotIn predicate on the "initFuncName" field.
func InitFuncNameNotIn(vs ...string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotIn(FieldInitFuncName, vs...))
}

// InitFuncNameGT applies the GT predicate on the "initFuncName" field.
func InitFuncNameGT(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGT(FieldInitFuncName, v))
}

// InitFuncNameGTE applies the GTE predicate on the "initFuncName" field.
func InitFuncNameGTE(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldGTE(FieldInitFuncName, v))
}

// InitFuncNameLT applies the LT predicate on the "initFuncName" field.
func InitFuncNameLT(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLT(FieldInitFuncName, v))
}

// InitFuncNameLTE applies the LTE predicate on the "initFuncName" field.
func InitFuncNameLTE(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldLTE(FieldInitFuncName, v))
}

// InitFuncNameContains applies the Contains predicate on the "initFuncName" field.
func InitFuncNameContains(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldContains(FieldInitFuncName, v))
}

// InitFuncNameHasPrefix applies the HasPrefix predicate on the "initFuncName" field.
func InitFuncNameHasPrefix(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldHasPrefix(FieldInitFuncName, v))
}

// InitFuncNameHasSuffix applies the HasSuffix predicate on the "initFuncName" field.
func InitFuncNameHasSuffix(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldHasSuffix(FieldInitFuncName, v))
}

// InitFuncNameIsNil applies the IsNil predicate on the "initFuncName" field.
func InitFuncNameIsNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldIsNull(FieldInitFuncName))
}

// InitFuncNameNotNil applies the NotNil predicate on the "initFuncName" field.
func InitFuncNameNotNil() predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldNotNull(FieldInitFuncName))
}

// InitFuncNameEqualFold applies the EqualFold predicate on the "initFuncName" field.
func InitFuncNameEqualFold(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldEqualFold(FieldInitFuncName, v))
}

// InitFuncNameContainsFold applies the ContainsFold predicate on the "initFuncName" field.
func InitFuncNameContainsFold(v string) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.FieldContainsFold(FieldInitFuncName, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.GoroutineTrace) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.GoroutineTrace) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.GoroutineTrace) predicate.GoroutineTrace {
	return predicate.GoroutineTrace(sql.NotPredicates(p))
}
