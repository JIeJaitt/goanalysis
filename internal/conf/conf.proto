syntax = "proto3";
package kratos.api;

option go_package = "goanalysis/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Biz biz = 2;
  Logger logger = 3;  // 添加日志配置
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Logger {
  string level = 1;        // 日志级别: debug, info, warn, error
  string file_path = 2;    // 日志文件路径
  bool console = 3;        // 是否同时输出到控制台
  int32 max_size = 4;      // 单个日志文件最大大小(MB)
  int32 max_age = 5;       // 日志文件保留天数
  int32 max_backups = 6;   // 保留的旧日志文件最大数量
  bool compress = 7;       // 是否压缩旧日志文件
}

message Biz {
  string staticDBpath = 1;
  // GitLab相关配置
  string gitlab_token = 2;     // GitLab访问令牌
  string gitlab_url = 3;       // GitLab服务器URL
  string gitlab_clone_dir = 4; // GitLab仓库克隆目录
  // 文件存储相关配置
  string runtimeDBpath = 5;    // 运行时数据库路径
  string file_storage_path = 6; // 文件存储路径
}
