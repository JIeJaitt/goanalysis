// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: staticanalysis/v1/staticanalysis.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取静态分析数据库文件列表请求
type GetStaticDbFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStaticDbFilesRequest) Reset() {
	*x = GetStaticDbFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticDbFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticDbFilesRequest) ProtoMessage() {}

func (x *GetStaticDbFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticDbFilesRequest.ProtoReflect.Descriptor instead.
func (*GetStaticDbFilesRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{0}
}

// 静态分析数据库文件信息
type DbFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size       int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	CreateTime string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *DbFileInfo) Reset() {
	*x = DbFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DbFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbFileInfo) ProtoMessage() {}

func (x *DbFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbFileInfo.ProtoReflect.Descriptor instead.
func (*DbFileInfo) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{1}
}

func (x *DbFileInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DbFileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DbFileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DbFileInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 获取静态分析数据库文件列表响应
type GetStaticDbFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*DbFileInfo `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *GetStaticDbFilesResponse) Reset() {
	*x = GetStaticDbFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticDbFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticDbFilesResponse) ProtoMessage() {}

func (x *GetStaticDbFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticDbFilesResponse.ProtoReflect.Descriptor instead.
func (*GetStaticDbFilesResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{2}
}

func (x *GetStaticDbFilesResponse) GetFiles() []*DbFileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

// 分析项目路径请求
type AnalyzeProjectPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path         string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Algo         string `protobuf:"bytes,2,opt,name=algo,proto3" json:"algo,omitempty"`                                     // 分析算法: "vta", "rta", "cha", "static"
	IgnoreMethod string `protobuf:"bytes,3,opt,name=ignore_method,json=ignoreMethod,proto3" json:"ignore_method,omitempty"` // 忽略分析特定方法
}

func (x *AnalyzeProjectPathRequest) Reset() {
	*x = AnalyzeProjectPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeProjectPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeProjectPathRequest) ProtoMessage() {}

func (x *AnalyzeProjectPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeProjectPathRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeProjectPathRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{3}
}

func (x *AnalyzeProjectPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AnalyzeProjectPathRequest) GetAlgo() string {
	if x != nil {
		return x.Algo
	}
	return ""
}

func (x *AnalyzeProjectPathRequest) GetIgnoreMethod() string {
	if x != nil {
		return x.IgnoreMethod
	}
	return ""
}

// 分析项目路径响应
type AnalyzeProjectPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TaskId  string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *AnalyzeProjectPathResponse) Reset() {
	*x = AnalyzeProjectPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeProjectPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeProjectPathResponse) ProtoMessage() {}

func (x *AnalyzeProjectPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeProjectPathResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeProjectPathResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{4}
}

func (x *AnalyzeProjectPathResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AnalyzeProjectPathResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AnalyzeProjectPathResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// 获取分析任务状态请求
type GetAnalysisTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetAnalysisTaskStatusRequest) Reset() {
	*x = GetAnalysisTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnalysisTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalysisTaskStatusRequest) ProtoMessage() {}

func (x *GetAnalysisTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalysisTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*GetAnalysisTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{5}
}

func (x *GetAnalysisTaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// 获取分析任务状态响应
type GetAnalysisTaskStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   int32   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`      // 状态：0: starting, 1: processing, 2: completed, -1: failed, -2: not_found
	Message  string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`     // 消息
	Progress float32 `protobuf:"fixed32,3,opt,name=progress,proto3" json:"progress,omitempty"` // 进度百分比 (0-100)
}

func (x *GetAnalysisTaskStatusResponse) Reset() {
	*x = GetAnalysisTaskStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnalysisTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalysisTaskStatusResponse) ProtoMessage() {}

func (x *GetAnalysisTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalysisTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*GetAnalysisTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{6}
}

func (x *GetAnalysisTaskStatusResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAnalysisTaskStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAnalysisTaskStatusResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

// 分析数据库文件请求
type AnalyzeDbFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"`
}

func (x *AnalyzeDbFileRequest) Reset() {
	*x = AnalyzeDbFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeDbFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeDbFileRequest) ProtoMessage() {}

func (x *AnalyzeDbFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeDbFileRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeDbFileRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{7}
}

func (x *AnalyzeDbFileRequest) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

// 包依赖关系
type PackageDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Count  int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PackageDependency) Reset() {
	*x = PackageDependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageDependency) ProtoMessage() {}

func (x *PackageDependency) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageDependency.ProtoReflect.Descriptor instead.
func (*PackageDependency) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{8}
}

func (x *PackageDependency) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PackageDependency) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *PackageDependency) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 热点函数
type HotFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                               // 函数唯一标识
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 函数名称
	Package   string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`                       // 包名
	CallCount int32  `protobuf:"varint,4,opt,name=call_count,json=callCount,proto3" json:"call_count,omitempty"` // 调用次数
}

func (x *HotFunction) Reset() {
	*x = HotFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotFunction) ProtoMessage() {}

func (x *HotFunction) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotFunction.ProtoReflect.Descriptor instead.
func (*HotFunction) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{9}
}

func (x *HotFunction) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HotFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HotFunction) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *HotFunction) GetCallCount() int32 {
	if x != nil {
		return x.CallCount
	}
	return 0
}

// 分析数据库文件响应
type AnalyzeDbFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalFunctions      int32                `protobuf:"varint,1,opt,name=total_functions,json=totalFunctions,proto3" json:"total_functions,omitempty"`
	TotalCalls          int32                `protobuf:"varint,2,opt,name=total_calls,json=totalCalls,proto3" json:"total_calls,omitempty"`
	TotalPackages       int32                `protobuf:"varint,3,opt,name=total_packages,json=totalPackages,proto3" json:"total_packages,omitempty"`
	PackageDependencies []*PackageDependency `protobuf:"bytes,4,rep,name=package_dependencies,json=packageDependencies,proto3" json:"package_dependencies,omitempty"`
	HotFunctions        []*HotFunction       `protobuf:"bytes,5,rep,name=hot_functions,json=hotFunctions,proto3" json:"hot_functions,omitempty"`
}

func (x *AnalyzeDbFileResponse) Reset() {
	*x = AnalyzeDbFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeDbFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeDbFileResponse) ProtoMessage() {}

func (x *AnalyzeDbFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeDbFileResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeDbFileResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{10}
}

func (x *AnalyzeDbFileResponse) GetTotalFunctions() int32 {
	if x != nil {
		return x.TotalFunctions
	}
	return 0
}

func (x *AnalyzeDbFileResponse) GetTotalCalls() int32 {
	if x != nil {
		return x.TotalCalls
	}
	return 0
}

func (x *AnalyzeDbFileResponse) GetTotalPackages() int32 {
	if x != nil {
		return x.TotalPackages
	}
	return 0
}

func (x *AnalyzeDbFileResponse) GetPackageDependencies() []*PackageDependency {
	if x != nil {
		return x.PackageDependencies
	}
	return nil
}

func (x *AnalyzeDbFileResponse) GetHotFunctions() []*HotFunction {
	if x != nil {
		return x.HotFunctions
	}
	return nil
}

// 获取热点函数的请求
type GetHotFunctionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortBy string `protobuf:"bytes,1,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"` // 排序方式: "calls" 或 "time"
}

func (x *GetHotFunctionsReq) Reset() {
	*x = GetHotFunctionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotFunctionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotFunctionsReq) ProtoMessage() {}

func (x *GetHotFunctionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotFunctionsReq.ProtoReflect.Descriptor instead.
func (*GetHotFunctionsReq) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{11}
}

func (x *GetHotFunctionsReq) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

// 获取热点函数的响应
type GetHotFunctionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions []*GetHotFunctionsReply_HotFunction `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"` // 热点函数列表
}

func (x *GetHotFunctionsReply) Reset() {
	*x = GetHotFunctionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotFunctionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotFunctionsReply) ProtoMessage() {}

func (x *GetHotFunctionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotFunctionsReply.ProtoReflect.Descriptor instead.
func (*GetHotFunctionsReply) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{12}
}

func (x *GetHotFunctionsReply) GetFunctions() []*GetHotFunctionsReply_HotFunction {
	if x != nil {
		return x.Functions
	}
	return nil
}

// 获取函数调用关系分析的请求
type GetFunctionAnalysisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionName string `protobuf:"bytes,1,opt,name=functionName,proto3" json:"functionName,omitempty"` // 函数名称
	Type         string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                 // 查询类型: "caller" 或 "callee"
	Path         string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                 // 项目路径
}

func (x *GetFunctionAnalysisReq) Reset() {
	*x = GetFunctionAnalysisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionAnalysisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionAnalysisReq) ProtoMessage() {}

func (x *GetFunctionAnalysisReq) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionAnalysisReq.ProtoReflect.Descriptor instead.
func (*GetFunctionAnalysisReq) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{13}
}

func (x *GetFunctionAnalysisReq) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *GetFunctionAnalysisReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetFunctionAnalysisReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// 获取函数调用关系分析的响应
type GetFunctionAnalysisReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallData []*GetFunctionAnalysisReply_FunctionNode `protobuf:"bytes,1,rep,name=callData,proto3" json:"callData,omitempty"` // 调用关系数据
}

func (x *GetFunctionAnalysisReply) Reset() {
	*x = GetFunctionAnalysisReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionAnalysisReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionAnalysisReply) ProtoMessage() {}

func (x *GetFunctionAnalysisReply) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionAnalysisReply.ProtoReflect.Descriptor instead.
func (*GetFunctionAnalysisReply) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{14}
}

func (x *GetFunctionAnalysisReply) GetCallData() []*GetFunctionAnalysisReply_FunctionNode {
	if x != nil {
		return x.CallData
	}
	return nil
}

// 获取函数调用关系图的请求
type GetFunctionCallGraphReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionName string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // 函数名称
	Depth        int32  `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`                                  // 调用深度，默认为2
	Direction    string `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`                           // 方向: "caller"(调用者), "callee"(被调用), "both"(双向)
}

func (x *GetFunctionCallGraphReq) Reset() {
	*x = GetFunctionCallGraphReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionCallGraphReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionCallGraphReq) ProtoMessage() {}

func (x *GetFunctionCallGraphReq) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionCallGraphReq.ProtoReflect.Descriptor instead.
func (*GetFunctionCallGraphReq) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{15}
}

func (x *GetFunctionCallGraphReq) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *GetFunctionCallGraphReq) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *GetFunctionCallGraphReq) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

// 获取函数调用关系图的响应
type GetFunctionCallGraphReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*GetFunctionCallGraphReply_GraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // 图节点
	Edges []*GetFunctionCallGraphReply_GraphEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"` // 图边
}

func (x *GetFunctionCallGraphReply) Reset() {
	*x = GetFunctionCallGraphReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionCallGraphReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionCallGraphReply) ProtoMessage() {}

func (x *GetFunctionCallGraphReply) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionCallGraphReply.ProtoReflect.Descriptor instead.
func (*GetFunctionCallGraphReply) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{16}
}

func (x *GetFunctionCallGraphReply) GetNodes() []*GetFunctionCallGraphReply_GraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetFunctionCallGraphReply) GetEdges() []*GetFunctionCallGraphReply_GraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

// GitLab仓库信息
type GitLabRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 仓库ID
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                        // 仓库名称
	FullName      string `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`                // 完整名称
	Description   string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                          // 描述
	DefaultBranch string `protobuf:"bytes,5,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"` // 默认分支
	WebUrl        string `protobuf:"bytes,6,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`                      // Web URL
	SshUrl        string `protobuf:"bytes,7,opt,name=ssh_url,json=sshUrl,proto3" json:"ssh_url,omitempty"`                      // SSH URL
	HttpUrl       string `protobuf:"bytes,8,opt,name=http_url,json=httpUrl,proto3" json:"http_url,omitempty"`                   // HTTP URL
	Visibility    string `protobuf:"bytes,9,opt,name=visibility,proto3" json:"visibility,omitempty"`                            // 可见性
	LastActivity  string `protobuf:"bytes,10,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`   // 最后活动时间
}

func (x *GitLabRepository) Reset() {
	*x = GitLabRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitLabRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitLabRepository) ProtoMessage() {}

func (x *GitLabRepository) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitLabRepository.ProtoReflect.Descriptor instead.
func (*GitLabRepository) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{17}
}

func (x *GitLabRepository) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GitLabRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GitLabRepository) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *GitLabRepository) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GitLabRepository) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

func (x *GitLabRepository) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

func (x *GitLabRepository) GetSshUrl() string {
	if x != nil {
		return x.SshUrl
	}
	return ""
}

func (x *GitLabRepository) GetHttpUrl() string {
	if x != nil {
		return x.HttpUrl
	}
	return ""
}

func (x *GitLabRepository) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *GitLabRepository) GetLastActivity() string {
	if x != nil {
		return x.LastActivity
	}
	return ""
}

// 获取GitLab仓库列表请求
type ListGitLabRepositoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGitLabRepositoriesRequest) Reset() {
	*x = ListGitLabRepositoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitLabRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitLabRepositoriesRequest) ProtoMessage() {}

func (x *ListGitLabRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitLabRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ListGitLabRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{18}
}

// 获取GitLab仓库列表响应
type ListGitLabRepositoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repositories []*GitLabRepository `protobuf:"bytes,1,rep,name=repositories,proto3" json:"repositories,omitempty"`
}

func (x *ListGitLabRepositoriesResponse) Reset() {
	*x = ListGitLabRepositoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitLabRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitLabRepositoriesResponse) ProtoMessage() {}

func (x *ListGitLabRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitLabRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ListGitLabRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{19}
}

func (x *ListGitLabRepositoriesResponse) GetRepositories() []*GitLabRepository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

// 克隆GitLab仓库请求
type CloneGitLabRepositoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoUrl string `protobuf:"bytes,1,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"` // 仓库URL
	Branch  string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`                  // 分支名称
}

func (x *CloneGitLabRepositoryRequest) Reset() {
	*x = CloneGitLabRepositoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneGitLabRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneGitLabRepositoryRequest) ProtoMessage() {}

func (x *CloneGitLabRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneGitLabRepositoryRequest.ProtoReflect.Descriptor instead.
func (*CloneGitLabRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{20}
}

func (x *CloneGitLabRepositoryRequest) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *CloneGitLabRepositoryRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

// 克隆GitLab仓库响应
type CloneGitLabRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                     // 是否成功
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                      // 消息
	TargetDir string `protobuf:"bytes,3,opt,name=target_dir,json=targetDir,proto3" json:"target_dir,omitempty"` // 目标目录
}

func (x *CloneGitLabRepositoryResponse) Reset() {
	*x = CloneGitLabRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneGitLabRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneGitLabRepositoryResponse) ProtoMessage() {}

func (x *CloneGitLabRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneGitLabRepositoryResponse.ProtoReflect.Descriptor instead.
func (*CloneGitLabRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{21}
}

func (x *CloneGitLabRepositoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloneGitLabRepositoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CloneGitLabRepositoryResponse) GetTargetDir() string {
	if x != nil {
		return x.TargetDir
	}
	return ""
}

// 分页获取包依赖关系请求
type GetPackageDependenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath   string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"`        // 数据库路径
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页大小
}

func (x *GetPackageDependenciesRequest) Reset() {
	*x = GetPackageDependenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageDependenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageDependenciesRequest) ProtoMessage() {}

func (x *GetPackageDependenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageDependenciesRequest.ProtoReflect.Descriptor instead.
func (*GetPackageDependenciesRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{22}
}

func (x *GetPackageDependenciesRequest) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *GetPackageDependenciesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPackageDependenciesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 分页获取包依赖关系响应
type GetPackageDependenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dependencies []*PackageDependency `protobuf:"bytes,1,rep,name=dependencies,proto3" json:"dependencies,omitempty"`             // 包依赖关系列表
	Total        int32                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                          // 总记录数
	Page         int32                `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                            // 当前页码
	PageSize     int32                `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页大小
	PageCount    int32                `protobuf:"varint,5,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"` // 总页数
}

func (x *GetPackageDependenciesResponse) Reset() {
	*x = GetPackageDependenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageDependenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageDependenciesResponse) ProtoMessage() {}

func (x *GetPackageDependenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageDependenciesResponse.ProtoReflect.Descriptor instead.
func (*GetPackageDependenciesResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{23}
}

func (x *GetPackageDependenciesResponse) GetDependencies() []*PackageDependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *GetPackageDependenciesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPackageDependenciesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPackageDependenciesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPackageDependenciesResponse) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

// 分页获取热点函数请求
type GetHotFunctionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath   string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"`        // 数据库路径
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页大小
}

func (x *GetHotFunctionsRequest) Reset() {
	*x = GetHotFunctionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotFunctionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotFunctionsRequest) ProtoMessage() {}

func (x *GetHotFunctionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotFunctionsRequest.ProtoReflect.Descriptor instead.
func (*GetHotFunctionsRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{24}
}

func (x *GetHotFunctionsRequest) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *GetHotFunctionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotFunctionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 分页获取热点函数响应
type GetHotFunctionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions []*HotFunction `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"`                   // 热点函数列表
	Total     int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                          // 总记录数
	Page      int32          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                            // 当前页码
	PageSize  int32          `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页大小
	PageCount int32          `protobuf:"varint,5,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"` // 总页数
}

func (x *GetHotFunctionsResponse) Reset() {
	*x = GetHotFunctionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotFunctionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotFunctionsResponse) ProtoMessage() {}

func (x *GetHotFunctionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotFunctionsResponse.ProtoReflect.Descriptor instead.
func (*GetHotFunctionsResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{25}
}

func (x *GetHotFunctionsResponse) GetFunctions() []*HotFunction {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *GetHotFunctionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetHotFunctionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotFunctionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetHotFunctionsResponse) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

// 函数信息
type FunctionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                               // 函数唯一标识
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 函数名称
	Package   string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`                       // 包名
	CallCount int32  `protobuf:"varint,4,opt,name=call_count,json=callCount,proto3" json:"call_count,omitempty"` // 调用次数
}

func (x *FunctionInfo) Reset() {
	*x = FunctionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionInfo) ProtoMessage() {}

func (x *FunctionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionInfo.ProtoReflect.Descriptor instead.
func (*FunctionInfo) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{26}
}

func (x *FunctionInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FunctionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionInfo) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *FunctionInfo) GetCallCount() int32 {
	if x != nil {
		return x.CallCount
	}
	return 0
}

// 模糊搜索函数请求
type SearchFunctionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"` // 数据库路径
	Query  string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`                 // 搜索关键词
}

func (x *SearchFunctionsRequest) Reset() {
	*x = SearchFunctionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFunctionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFunctionsRequest) ProtoMessage() {}

func (x *SearchFunctionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFunctionsRequest.ProtoReflect.Descriptor instead.
func (*SearchFunctionsRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{27}
}

func (x *SearchFunctionsRequest) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *SearchFunctionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// 模糊搜索函数响应
type SearchFunctionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions []*FunctionInfo `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"` // 匹配的函数列表
}

func (x *SearchFunctionsResponse) Reset() {
	*x = SearchFunctionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFunctionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFunctionsResponse) ProtoMessage() {}

func (x *SearchFunctionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFunctionsResponse.ProtoReflect.Descriptor instead.
func (*SearchFunctionsResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{28}
}

func (x *SearchFunctionsResponse) GetFunctions() []*FunctionInfo {
	if x != nil {
		return x.Functions
	}
	return nil
}

// 获取函数上游调用关系请求
type GetFunctionUpstreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath      string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"`                // 数据库路径
	FunctionKey string `protobuf:"bytes,2,opt,name=function_key,json=functionKey,proto3" json:"function_key,omitempty"` // 函数唯一标识
}

func (x *GetFunctionUpstreamRequest) Reset() {
	*x = GetFunctionUpstreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionUpstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionUpstreamRequest) ProtoMessage() {}

func (x *GetFunctionUpstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionUpstreamRequest.ProtoReflect.Descriptor instead.
func (*GetFunctionUpstreamRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{29}
}

func (x *GetFunctionUpstreamRequest) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *GetFunctionUpstreamRequest) GetFunctionKey() string {
	if x != nil {
		return x.FunctionKey
	}
	return ""
}

// 图节点
type GraphNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 节点ID
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 函数名称
	Package   string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`                       // 包名
	CallCount int32  `protobuf:"varint,4,opt,name=call_count,json=callCount,proto3" json:"call_count,omitempty"` // 调用次数
}

func (x *GraphNode) Reset() {
	*x = GraphNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphNode) ProtoMessage() {}

func (x *GraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphNode.ProtoReflect.Descriptor instead.
func (*GraphNode) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{30}
}

func (x *GraphNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GraphNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GraphNode) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *GraphNode) GetCallCount() int32 {
	if x != nil {
		return x.CallCount
	}
	return 0
}

// 图边
type GraphEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"` // 源节点ID
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` // 目标节点ID
	Value  int32  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`  // 边权重
}

func (x *GraphEdge) Reset() {
	*x = GraphEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphEdge) ProtoMessage() {}

func (x *GraphEdge) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphEdge.ProtoReflect.Descriptor instead.
func (*GraphEdge) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{31}
}

func (x *GraphEdge) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GraphEdge) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *GraphEdge) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 获取函数上游调用关系响应
type GetFunctionUpstreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*GraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // 图节点
	Edges []*GraphEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"` // 图边
}

func (x *GetFunctionUpstreamResponse) Reset() {
	*x = GetFunctionUpstreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionUpstreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionUpstreamResponse) ProtoMessage() {}

func (x *GetFunctionUpstreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionUpstreamResponse.ProtoReflect.Descriptor instead.
func (*GetFunctionUpstreamResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{32}
}

func (x *GetFunctionUpstreamResponse) GetNodes() []*GraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetFunctionUpstreamResponse) GetEdges() []*GraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

// 获取函数下游调用关系请求
type GetFunctionDownstreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath      string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"`                // 数据库路径
	FunctionKey string `protobuf:"bytes,2,opt,name=function_key,json=functionKey,proto3" json:"function_key,omitempty"` // 函数唯一标识
}

func (x *GetFunctionDownstreamRequest) Reset() {
	*x = GetFunctionDownstreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionDownstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionDownstreamRequest) ProtoMessage() {}

func (x *GetFunctionDownstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionDownstreamRequest.ProtoReflect.Descriptor instead.
func (*GetFunctionDownstreamRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{33}
}

func (x *GetFunctionDownstreamRequest) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *GetFunctionDownstreamRequest) GetFunctionKey() string {
	if x != nil {
		return x.FunctionKey
	}
	return ""
}

// 获取函数下游调用关系响应
type GetFunctionDownstreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*GraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // 图节点
	Edges []*GraphEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"` // 图边
}

func (x *GetFunctionDownstreamResponse) Reset() {
	*x = GetFunctionDownstreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionDownstreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionDownstreamResponse) ProtoMessage() {}

func (x *GetFunctionDownstreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionDownstreamResponse.ProtoReflect.Descriptor instead.
func (*GetFunctionDownstreamResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{34}
}

func (x *GetFunctionDownstreamResponse) GetNodes() []*GraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetFunctionDownstreamResponse) GetEdges() []*GraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

// 获取函数全链路调用关系请求
type GetFunctionFullChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath      string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"`                // 数据库路径
	FunctionKey string `protobuf:"bytes,2,opt,name=function_key,json=functionKey,proto3" json:"function_key,omitempty"` // 函数唯一标识
}

func (x *GetFunctionFullChainRequest) Reset() {
	*x = GetFunctionFullChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionFullChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionFullChainRequest) ProtoMessage() {}

func (x *GetFunctionFullChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionFullChainRequest.ProtoReflect.Descriptor instead.
func (*GetFunctionFullChainRequest) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{35}
}

func (x *GetFunctionFullChainRequest) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *GetFunctionFullChainRequest) GetFunctionKey() string {
	if x != nil {
		return x.FunctionKey
	}
	return ""
}

// 获取函数全链路调用关系响应
type GetFunctionFullChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*GraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // 图节点
	Edges []*GraphEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"` // 图边
}

func (x *GetFunctionFullChainResponse) Reset() {
	*x = GetFunctionFullChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionFullChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionFullChainResponse) ProtoMessage() {}

func (x *GetFunctionFullChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionFullChainResponse.ProtoReflect.Descriptor instead.
func (*GetFunctionFullChainResponse) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{36}
}

func (x *GetFunctionFullChainResponse) GetNodes() []*GraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetFunctionFullChainResponse) GetEdges() []*GraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

// 获取树状图请求
type GetTreeGraphReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbPath       string `protobuf:"bytes,1,opt,name=db_path,json=dbPath,proto3" json:"db_path,omitempty"`                   // 数据库路径
	FunctionName string `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // 函数名称
}

func (x *GetTreeGraphReq) Reset() {
	*x = GetTreeGraphReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeGraphReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeGraphReq) ProtoMessage() {}

func (x *GetTreeGraphReq) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeGraphReq.ProtoReflect.Descriptor instead.
func (*GetTreeGraphReq) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{37}
}

func (x *GetTreeGraphReq) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *GetTreeGraphReq) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

// 树状图节点
type TreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`            // 节点名称
	Value     int64       `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`         // 值，只在tooltip中显示
	Collapsed bool        `protobuf:"varint,3,opt,name=collapsed,proto3" json:"collapsed,omitempty"` // 是否默认折叠
	Children  []*TreeNode `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`    // 子节点
}

func (x *TreeNode) Reset() {
	*x = TreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNode) ProtoMessage() {}

func (x *TreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNode.ProtoReflect.Descriptor instead.
func (*TreeNode) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{38}
}

func (x *TreeNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreeNode) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TreeNode) GetCollapsed() bool {
	if x != nil {
		return x.Collapsed
	}
	return false
}

func (x *TreeNode) GetChildren() []*TreeNode {
	if x != nil {
		return x.Children
	}
	return nil
}

// 获取树状图响应
type GetTreeGraphReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root *TreeNode `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"` // 根节点
}

func (x *GetTreeGraphReply) Reset() {
	*x = GetTreeGraphReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeGraphReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeGraphReply) ProtoMessage() {}

func (x *GetTreeGraphReply) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeGraphReply.ProtoReflect.Descriptor instead.
func (*GetTreeGraphReply) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{39}
}

func (x *GetTreeGraphReply) GetRoot() *TreeNode {
	if x != nil {
		return x.Root
	}
	return nil
}

type GetHotFunctionsReply_HotFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                             // 函数名称
	Package   string `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`                       // 包名
	CallCount int32  `protobuf:"varint,3,opt,name=call_count,json=callCount,proto3" json:"call_count,omitempty"` // 调用次数
	TotalTime string `protobuf:"bytes,4,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"`  // 总耗时
	AvgTime   string `protobuf:"bytes,5,opt,name=avg_time,json=avgTime,proto3" json:"avg_time,omitempty"`        // 平均耗时
}

func (x *GetHotFunctionsReply_HotFunction) Reset() {
	*x = GetHotFunctionsReply_HotFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotFunctionsReply_HotFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotFunctionsReply_HotFunction) ProtoMessage() {}

func (x *GetHotFunctionsReply_HotFunction) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotFunctionsReply_HotFunction.ProtoReflect.Descriptor instead.
func (*GetHotFunctionsReply_HotFunction) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetHotFunctionsReply_HotFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetHotFunctionsReply_HotFunction) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *GetHotFunctionsReply_HotFunction) GetCallCount() int32 {
	if x != nil {
		return x.CallCount
	}
	return 0
}

func (x *GetHotFunctionsReply_HotFunction) GetTotalTime() string {
	if x != nil {
		return x.TotalTime
	}
	return ""
}

func (x *GetHotFunctionsReply_HotFunction) GetAvgTime() string {
	if x != nil {
		return x.AvgTime
	}
	return ""
}

type GetFunctionAnalysisReply_FunctionNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 节点ID
	Name      string                                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 函数名称
	Package   string                                   `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`                       // 包名
	CallCount int32                                    `protobuf:"varint,4,opt,name=call_count,json=callCount,proto3" json:"call_count,omitempty"` // 调用次数
	AvgTime   string                                   `protobuf:"bytes,5,opt,name=avg_time,json=avgTime,proto3" json:"avg_time,omitempty"`        // 平均耗时
	Children  []*GetFunctionAnalysisReply_FunctionNode `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`                     // 子节点
}

func (x *GetFunctionAnalysisReply_FunctionNode) Reset() {
	*x = GetFunctionAnalysisReply_FunctionNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionAnalysisReply_FunctionNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionAnalysisReply_FunctionNode) ProtoMessage() {}

func (x *GetFunctionAnalysisReply_FunctionNode) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionAnalysisReply_FunctionNode.ProtoReflect.Descriptor instead.
func (*GetFunctionAnalysisReply_FunctionNode) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetFunctionAnalysisReply_FunctionNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFunctionAnalysisReply_FunctionNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFunctionAnalysisReply_FunctionNode) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *GetFunctionAnalysisReply_FunctionNode) GetCallCount() int32 {
	if x != nil {
		return x.CallCount
	}
	return 0
}

func (x *GetFunctionAnalysisReply_FunctionNode) GetAvgTime() string {
	if x != nil {
		return x.AvgTime
	}
	return ""
}

func (x *GetFunctionAnalysisReply_FunctionNode) GetChildren() []*GetFunctionAnalysisReply_FunctionNode {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetFunctionCallGraphReply_GraphNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 节点ID
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 函数名称
	Package   string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`                       // 包名
	CallCount int32  `protobuf:"varint,4,opt,name=call_count,json=callCount,proto3" json:"call_count,omitempty"` // 调用次数
	AvgTime   string `protobuf:"bytes,5,opt,name=avg_time,json=avgTime,proto3" json:"avg_time,omitempty"`        // 平均耗时
	NodeType  string `protobuf:"bytes,6,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`     // 节点类型: "root", "caller", "callee"
}

func (x *GetFunctionCallGraphReply_GraphNode) Reset() {
	*x = GetFunctionCallGraphReply_GraphNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionCallGraphReply_GraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionCallGraphReply_GraphNode) ProtoMessage() {}

func (x *GetFunctionCallGraphReply_GraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionCallGraphReply_GraphNode.ProtoReflect.Descriptor instead.
func (*GetFunctionCallGraphReply_GraphNode) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetFunctionCallGraphReply_GraphNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFunctionCallGraphReply_GraphNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFunctionCallGraphReply_GraphNode) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *GetFunctionCallGraphReply_GraphNode) GetCallCount() int32 {
	if x != nil {
		return x.CallCount
	}
	return 0
}

func (x *GetFunctionCallGraphReply_GraphNode) GetAvgTime() string {
	if x != nil {
		return x.AvgTime
	}
	return ""
}

func (x *GetFunctionCallGraphReply_GraphNode) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

type GetFunctionCallGraphReply_GraphEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source   string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`                     // 源节点ID
	Target   string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`                     // 目标节点ID
	Label    string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`                       // 边标签
	EdgeType string `protobuf:"bytes,4,opt,name=edge_type,json=edgeType,proto3" json:"edge_type,omitempty"` // 边类型: "caller_to_root", "root_to_callee"
}

func (x *GetFunctionCallGraphReply_GraphEdge) Reset() {
	*x = GetFunctionCallGraphReply_GraphEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionCallGraphReply_GraphEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionCallGraphReply_GraphEdge) ProtoMessage() {}

func (x *GetFunctionCallGraphReply_GraphEdge) ProtoReflect() protoreflect.Message {
	mi := &file_staticanalysis_v1_staticanalysis_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionCallGraphReply_GraphEdge.ProtoReflect.Descriptor instead.
func (*GetFunctionCallGraphReply_GraphEdge) Descriptor() ([]byte, []int) {
	return file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP(), []int{16, 1}
}

func (x *GetFunctionCallGraphReply_GraphEdge) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetFunctionCallGraphReply_GraphEdge) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *GetFunctionCallGraphReply_GraphEdge) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetFunctionCallGraphReply_GraphEdge) GetEdgeType() string {
	if x != nil {
		return x.EdgeType
	}
	return ""
}

var File_staticanalysis_v1_staticanalysis_proto protoreflect.FileDescriptor

var file_staticanalysis_v1_staticanalysis_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x0a, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x62, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x62, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0x68, 0x0a, 0x19, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x6c, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x6c, 0x67, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x69, 0x0a, 0x1a, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x6d,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2f, 0x0a,
	0x14, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74, 0x68, 0x22, 0x59,
	0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x0b, 0x48, 0x6f, 0x74,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa6, 0x02, 0x0a, 0x15, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x68,
	0x6f, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x68, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22,
	0x80, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x51, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x94, 0x01, 0x0a, 0x0b,
	0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x76, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x64, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xcf, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x54, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xdc, 0x01, 0x0a, 0x0c,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x76, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x76, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x70, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xca,
	0x03, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x09, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x76, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x6e, 0x0a, 0x09, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x10,
	0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65,
	0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62,
	0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x73, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x74, 0x74, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x1f, 0x0a, 0x1d,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a,
	0x1e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x1c, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x72, 0x0a, 0x1d, 0x43,
	0x6c, 0x6f, 0x6e, 0x65, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x22,
	0x69, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x62, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xbd, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x6d, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x47, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x58, 0x0a, 0x17, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x68, 0x0a,
	0x09, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x45, 0x64, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67,
	0x65, 0x73, 0x22, 0x5a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x87,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x22, 0x86, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01,
	0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73,
	0x65, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x32, 0xcc, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x12, 0x88, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x64, 0x62, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0xa5, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x7b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2c,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x2f, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x82, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x44, 0x62, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x44, 0x62,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x44, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a,
	0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x29, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12,
	0xc5, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x2a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4d, 0x5a, 0x1f, 0x62, 0x01, 0x2a, 0x12,
	0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x2a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x7b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0xa6, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x4c, 0x61,
	0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74,
	0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12,
	0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x9f, 0x01, 0x0a, 0x15, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x6f, 0x6e, 0x65, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x6c, 0x6f,
	0x6e, 0x65, 0x12, 0xaa, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x30, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x2d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x8e, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x2f, 0x68, 0x6f, 0x74, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x91, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0xa6, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x2f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0xa2,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75,
	0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x66, 0x75, 0x6c, 0x6c, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x7b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x65, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2d, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x6f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x2f, 0x67, 0x6f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_staticanalysis_v1_staticanalysis_proto_rawDescOnce sync.Once
	file_staticanalysis_v1_staticanalysis_proto_rawDescData = file_staticanalysis_v1_staticanalysis_proto_rawDesc
)

func file_staticanalysis_v1_staticanalysis_proto_rawDescGZIP() []byte {
	file_staticanalysis_v1_staticanalysis_proto_rawDescOnce.Do(func() {
		file_staticanalysis_v1_staticanalysis_proto_rawDescData = protoimpl.X.CompressGZIP(file_staticanalysis_v1_staticanalysis_proto_rawDescData)
	})
	return file_staticanalysis_v1_staticanalysis_proto_rawDescData
}

var file_staticanalysis_v1_staticanalysis_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_staticanalysis_v1_staticanalysis_proto_goTypes = []interface{}{
	(*GetStaticDbFilesRequest)(nil),               // 0: staticanalysis.v1.GetStaticDbFilesRequest
	(*DbFileInfo)(nil),                            // 1: staticanalysis.v1.DbFileInfo
	(*GetStaticDbFilesResponse)(nil),              // 2: staticanalysis.v1.GetStaticDbFilesResponse
	(*AnalyzeProjectPathRequest)(nil),             // 3: staticanalysis.v1.AnalyzeProjectPathRequest
	(*AnalyzeProjectPathResponse)(nil),            // 4: staticanalysis.v1.AnalyzeProjectPathResponse
	(*GetAnalysisTaskStatusRequest)(nil),          // 5: staticanalysis.v1.GetAnalysisTaskStatusRequest
	(*GetAnalysisTaskStatusResponse)(nil),         // 6: staticanalysis.v1.GetAnalysisTaskStatusResponse
	(*AnalyzeDbFileRequest)(nil),                  // 7: staticanalysis.v1.AnalyzeDbFileRequest
	(*PackageDependency)(nil),                     // 8: staticanalysis.v1.PackageDependency
	(*HotFunction)(nil),                           // 9: staticanalysis.v1.HotFunction
	(*AnalyzeDbFileResponse)(nil),                 // 10: staticanalysis.v1.AnalyzeDbFileResponse
	(*GetHotFunctionsReq)(nil),                    // 11: staticanalysis.v1.GetHotFunctionsReq
	(*GetHotFunctionsReply)(nil),                  // 12: staticanalysis.v1.GetHotFunctionsReply
	(*GetFunctionAnalysisReq)(nil),                // 13: staticanalysis.v1.GetFunctionAnalysisReq
	(*GetFunctionAnalysisReply)(nil),              // 14: staticanalysis.v1.GetFunctionAnalysisReply
	(*GetFunctionCallGraphReq)(nil),               // 15: staticanalysis.v1.GetFunctionCallGraphReq
	(*GetFunctionCallGraphReply)(nil),             // 16: staticanalysis.v1.GetFunctionCallGraphReply
	(*GitLabRepository)(nil),                      // 17: staticanalysis.v1.GitLabRepository
	(*ListGitLabRepositoriesRequest)(nil),         // 18: staticanalysis.v1.ListGitLabRepositoriesRequest
	(*ListGitLabRepositoriesResponse)(nil),        // 19: staticanalysis.v1.ListGitLabRepositoriesResponse
	(*CloneGitLabRepositoryRequest)(nil),          // 20: staticanalysis.v1.CloneGitLabRepositoryRequest
	(*CloneGitLabRepositoryResponse)(nil),         // 21: staticanalysis.v1.CloneGitLabRepositoryResponse
	(*GetPackageDependenciesRequest)(nil),         // 22: staticanalysis.v1.GetPackageDependenciesRequest
	(*GetPackageDependenciesResponse)(nil),        // 23: staticanalysis.v1.GetPackageDependenciesResponse
	(*GetHotFunctionsRequest)(nil),                // 24: staticanalysis.v1.GetHotFunctionsRequest
	(*GetHotFunctionsResponse)(nil),               // 25: staticanalysis.v1.GetHotFunctionsResponse
	(*FunctionInfo)(nil),                          // 26: staticanalysis.v1.FunctionInfo
	(*SearchFunctionsRequest)(nil),                // 27: staticanalysis.v1.SearchFunctionsRequest
	(*SearchFunctionsResponse)(nil),               // 28: staticanalysis.v1.SearchFunctionsResponse
	(*GetFunctionUpstreamRequest)(nil),            // 29: staticanalysis.v1.GetFunctionUpstreamRequest
	(*GraphNode)(nil),                             // 30: staticanalysis.v1.GraphNode
	(*GraphEdge)(nil),                             // 31: staticanalysis.v1.GraphEdge
	(*GetFunctionUpstreamResponse)(nil),           // 32: staticanalysis.v1.GetFunctionUpstreamResponse
	(*GetFunctionDownstreamRequest)(nil),          // 33: staticanalysis.v1.GetFunctionDownstreamRequest
	(*GetFunctionDownstreamResponse)(nil),         // 34: staticanalysis.v1.GetFunctionDownstreamResponse
	(*GetFunctionFullChainRequest)(nil),           // 35: staticanalysis.v1.GetFunctionFullChainRequest
	(*GetFunctionFullChainResponse)(nil),          // 36: staticanalysis.v1.GetFunctionFullChainResponse
	(*GetTreeGraphReq)(nil),                       // 37: staticanalysis.v1.GetTreeGraphReq
	(*TreeNode)(nil),                              // 38: staticanalysis.v1.TreeNode
	(*GetTreeGraphReply)(nil),                     // 39: staticanalysis.v1.GetTreeGraphReply
	(*GetHotFunctionsReply_HotFunction)(nil),      // 40: staticanalysis.v1.GetHotFunctionsReply.HotFunction
	(*GetFunctionAnalysisReply_FunctionNode)(nil), // 41: staticanalysis.v1.GetFunctionAnalysisReply.FunctionNode
	(*GetFunctionCallGraphReply_GraphNode)(nil),   // 42: staticanalysis.v1.GetFunctionCallGraphReply.GraphNode
	(*GetFunctionCallGraphReply_GraphEdge)(nil),   // 43: staticanalysis.v1.GetFunctionCallGraphReply.GraphEdge
}
var file_staticanalysis_v1_staticanalysis_proto_depIdxs = []int32{
	1,  // 0: staticanalysis.v1.GetStaticDbFilesResponse.files:type_name -> staticanalysis.v1.DbFileInfo
	8,  // 1: staticanalysis.v1.AnalyzeDbFileResponse.package_dependencies:type_name -> staticanalysis.v1.PackageDependency
	9,  // 2: staticanalysis.v1.AnalyzeDbFileResponse.hot_functions:type_name -> staticanalysis.v1.HotFunction
	40, // 3: staticanalysis.v1.GetHotFunctionsReply.functions:type_name -> staticanalysis.v1.GetHotFunctionsReply.HotFunction
	41, // 4: staticanalysis.v1.GetFunctionAnalysisReply.callData:type_name -> staticanalysis.v1.GetFunctionAnalysisReply.FunctionNode
	42, // 5: staticanalysis.v1.GetFunctionCallGraphReply.nodes:type_name -> staticanalysis.v1.GetFunctionCallGraphReply.GraphNode
	43, // 6: staticanalysis.v1.GetFunctionCallGraphReply.edges:type_name -> staticanalysis.v1.GetFunctionCallGraphReply.GraphEdge
	17, // 7: staticanalysis.v1.ListGitLabRepositoriesResponse.repositories:type_name -> staticanalysis.v1.GitLabRepository
	8,  // 8: staticanalysis.v1.GetPackageDependenciesResponse.dependencies:type_name -> staticanalysis.v1.PackageDependency
	9,  // 9: staticanalysis.v1.GetHotFunctionsResponse.functions:type_name -> staticanalysis.v1.HotFunction
	26, // 10: staticanalysis.v1.SearchFunctionsResponse.functions:type_name -> staticanalysis.v1.FunctionInfo
	30, // 11: staticanalysis.v1.GetFunctionUpstreamResponse.nodes:type_name -> staticanalysis.v1.GraphNode
	31, // 12: staticanalysis.v1.GetFunctionUpstreamResponse.edges:type_name -> staticanalysis.v1.GraphEdge
	30, // 13: staticanalysis.v1.GetFunctionDownstreamResponse.nodes:type_name -> staticanalysis.v1.GraphNode
	31, // 14: staticanalysis.v1.GetFunctionDownstreamResponse.edges:type_name -> staticanalysis.v1.GraphEdge
	30, // 15: staticanalysis.v1.GetFunctionFullChainResponse.nodes:type_name -> staticanalysis.v1.GraphNode
	31, // 16: staticanalysis.v1.GetFunctionFullChainResponse.edges:type_name -> staticanalysis.v1.GraphEdge
	38, // 17: staticanalysis.v1.TreeNode.children:type_name -> staticanalysis.v1.TreeNode
	38, // 18: staticanalysis.v1.GetTreeGraphReply.root:type_name -> staticanalysis.v1.TreeNode
	41, // 19: staticanalysis.v1.GetFunctionAnalysisReply.FunctionNode.children:type_name -> staticanalysis.v1.GetFunctionAnalysisReply.FunctionNode
	0,  // 20: staticanalysis.v1.StaticAnalysis.GetStaticDbFiles:input_type -> staticanalysis.v1.GetStaticDbFilesRequest
	5,  // 21: staticanalysis.v1.StaticAnalysis.GetAnalysisTaskStatus:input_type -> staticanalysis.v1.GetAnalysisTaskStatusRequest
	3,  // 22: staticanalysis.v1.StaticAnalysis.AnalyzeProjectPath:input_type -> staticanalysis.v1.AnalyzeProjectPathRequest
	7,  // 23: staticanalysis.v1.StaticAnalysis.AnalyzeDbFile:input_type -> staticanalysis.v1.AnalyzeDbFileRequest
	13, // 24: staticanalysis.v1.StaticAnalysis.GetFunctionAnalysis:input_type -> staticanalysis.v1.GetFunctionAnalysisReq
	15, // 25: staticanalysis.v1.StaticAnalysis.GetFunctionCallGraph:input_type -> staticanalysis.v1.GetFunctionCallGraphReq
	18, // 26: staticanalysis.v1.StaticAnalysis.ListGitLabRepositories:input_type -> staticanalysis.v1.ListGitLabRepositoriesRequest
	20, // 27: staticanalysis.v1.StaticAnalysis.CloneGitLabRepository:input_type -> staticanalysis.v1.CloneGitLabRepositoryRequest
	22, // 28: staticanalysis.v1.StaticAnalysis.GetPackageDependencies:input_type -> staticanalysis.v1.GetPackageDependenciesRequest
	24, // 29: staticanalysis.v1.StaticAnalysis.GetHotFunctions:input_type -> staticanalysis.v1.GetHotFunctionsRequest
	27, // 30: staticanalysis.v1.StaticAnalysis.SearchFunctions:input_type -> staticanalysis.v1.SearchFunctionsRequest
	29, // 31: staticanalysis.v1.StaticAnalysis.GetFunctionUpstream:input_type -> staticanalysis.v1.GetFunctionUpstreamRequest
	33, // 32: staticanalysis.v1.StaticAnalysis.GetFunctionDownstream:input_type -> staticanalysis.v1.GetFunctionDownstreamRequest
	35, // 33: staticanalysis.v1.StaticAnalysis.GetFunctionFullChain:input_type -> staticanalysis.v1.GetFunctionFullChainRequest
	37, // 34: staticanalysis.v1.StaticAnalysis.GetTreeGraph:input_type -> staticanalysis.v1.GetTreeGraphReq
	2,  // 35: staticanalysis.v1.StaticAnalysis.GetStaticDbFiles:output_type -> staticanalysis.v1.GetStaticDbFilesResponse
	6,  // 36: staticanalysis.v1.StaticAnalysis.GetAnalysisTaskStatus:output_type -> staticanalysis.v1.GetAnalysisTaskStatusResponse
	4,  // 37: staticanalysis.v1.StaticAnalysis.AnalyzeProjectPath:output_type -> staticanalysis.v1.AnalyzeProjectPathResponse
	10, // 38: staticanalysis.v1.StaticAnalysis.AnalyzeDbFile:output_type -> staticanalysis.v1.AnalyzeDbFileResponse
	14, // 39: staticanalysis.v1.StaticAnalysis.GetFunctionAnalysis:output_type -> staticanalysis.v1.GetFunctionAnalysisReply
	16, // 40: staticanalysis.v1.StaticAnalysis.GetFunctionCallGraph:output_type -> staticanalysis.v1.GetFunctionCallGraphReply
	19, // 41: staticanalysis.v1.StaticAnalysis.ListGitLabRepositories:output_type -> staticanalysis.v1.ListGitLabRepositoriesResponse
	21, // 42: staticanalysis.v1.StaticAnalysis.CloneGitLabRepository:output_type -> staticanalysis.v1.CloneGitLabRepositoryResponse
	23, // 43: staticanalysis.v1.StaticAnalysis.GetPackageDependencies:output_type -> staticanalysis.v1.GetPackageDependenciesResponse
	25, // 44: staticanalysis.v1.StaticAnalysis.GetHotFunctions:output_type -> staticanalysis.v1.GetHotFunctionsResponse
	28, // 45: staticanalysis.v1.StaticAnalysis.SearchFunctions:output_type -> staticanalysis.v1.SearchFunctionsResponse
	32, // 46: staticanalysis.v1.StaticAnalysis.GetFunctionUpstream:output_type -> staticanalysis.v1.GetFunctionUpstreamResponse
	34, // 47: staticanalysis.v1.StaticAnalysis.GetFunctionDownstream:output_type -> staticanalysis.v1.GetFunctionDownstreamResponse
	36, // 48: staticanalysis.v1.StaticAnalysis.GetFunctionFullChain:output_type -> staticanalysis.v1.GetFunctionFullChainResponse
	39, // 49: staticanalysis.v1.StaticAnalysis.GetTreeGraph:output_type -> staticanalysis.v1.GetTreeGraphReply
	35, // [35:50] is the sub-list for method output_type
	20, // [20:35] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_staticanalysis_v1_staticanalysis_proto_init() }
func file_staticanalysis_v1_staticanalysis_proto_init() {
	if File_staticanalysis_v1_staticanalysis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticDbFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DbFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticDbFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeProjectPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeProjectPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnalysisTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnalysisTaskStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeDbFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageDependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeDbFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotFunctionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotFunctionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionAnalysisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionAnalysisReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionCallGraphReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionCallGraphReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitLabRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitLabRepositoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitLabRepositoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneGitLabRepositoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneGitLabRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackageDependenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackageDependenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotFunctionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotFunctionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFunctionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFunctionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionUpstreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionUpstreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionDownstreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionDownstreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionFullChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionFullChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeGraphReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeGraphReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotFunctionsReply_HotFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionAnalysisReply_FunctionNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionCallGraphReply_GraphNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staticanalysis_v1_staticanalysis_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionCallGraphReply_GraphEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_staticanalysis_v1_staticanalysis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_staticanalysis_v1_staticanalysis_proto_goTypes,
		DependencyIndexes: file_staticanalysis_v1_staticanalysis_proto_depIdxs,
		MessageInfos:      file_staticanalysis_v1_staticanalysis_proto_msgTypes,
	}.Build()
	File_staticanalysis_v1_staticanalysis_proto = out.File
	file_staticanalysis_v1_staticanalysis_proto_rawDesc = nil
	file_staticanalysis_v1_staticanalysis_proto_goTypes = nil
	file_staticanalysis_v1_staticanalysis_proto_depIdxs = nil
}
