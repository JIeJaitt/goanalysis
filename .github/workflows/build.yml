name: build and release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取所有历史记录和标签

      - name: setup go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: get version info
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git describe --tags --always || echo $(echo $GITHUB_SHA | cut -c1-8))
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: sync frontend code
        run: |
          make sync-frontend

      - name: build application
        run: |
          make build VERSION=$VERSION

      - name: package linux version
        run: |
          make package-linux VERSION=$VERSION

      - name: package windows version
        run: |
          make package-windows VERSION=$VERSION

      - name: login to github container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=ref,event=branch

      - name: build and push docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}

      - name: upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: goanalysis-packages
          path: |
            release/goanalysis-linux-${{ env.VERSION }}.tar.gz
            release/goanalysis-windows-${{ env.VERSION }}.tar.gz

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: goanalysis-packages
          path: release

      - name: create github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/goanalysis-linux-${{ needs.build.outputs.version }}.tar.gz
            release/goanalysis-windows-${{ needs.build.outputs.version }}.tar.gz
          generate_release_notes: true 